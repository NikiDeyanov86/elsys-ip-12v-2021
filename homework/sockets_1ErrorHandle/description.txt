Часовник, Хронометър и Таймер имплементирани като Socket сървър и клиент.
Компилиране и стартиране:
Клиента и сървъра трябва да са два отделни модула в общ maven проект, които да продуцират артефакти *client*.jar и *server*.jar (трябва думата client и server да се среща в името, за да се разбере кой jar какво съдържа, имената на модулите и цялото име на артефакта няма значение). Артефактите трябва да се намират в target папка на съответния модул след изпълнение на mvn clean package
Сървърът се стартират посредством java -jar <пътя_до_jar_файла> <PORT>, където <PORT> е валиден TCP/IP порт.
Ако не е подаден точно един аргумент, който е валиден порт, да се изпише invalid arguments в потока за грешки (System.err) и да се приключи изпълнението на програмата с код за грешка 1.
Ако подадения порт е зает от друго приложение да се изпише port is already in use в потока за грешки и да се приключи изпълнението на програмата с код за грешка 2.
Клиентът се стартира посредством java -jar <пътя_до_jar_файла> <HOST>:<PORT>, където <HOST> e IP или hostname на стартиран сървър, а <PORT> е валиден TCP/IP порт, на който сървъра слуша за нови клиенти.
Ако не е подаден точно един аргумент, който е валиден хост:порт, да се изпише invalid arguments в потока за грешки (System.err) и да се приключи изпълнението на програмата с код за грешка 1. (<HOST>:<PORT> е един аргумент, който има две части разделени с две точки “:”)
Ако не може да се намери отдалечен хост под името <HOST> да се изпише invalid host в потока за грешки и да се приключи изпълнението с код за грешка 3.
Ако отделен хост може да се намери, но не може да се създаден връзка към подадения порт да се изпише connection not possible в потока за грешки и да се приключи изпълнението с код за грешка 4.
Когато клиента е стариран успешно чака потребителя да подава команди през конзолата.
Ако сървъра престане да работи всички закачени клиенти трябва да приключат работа със съобщение server disconnect и код за грешка 0.
Могат да се закачат едновременно повече от един клиент.
Общи изисквания:
Всички команди, които сървъра може да приема се изписват на един ред в конзолата на клиента и след натискане на Enter се подават към сървъра, който може да реагира на командата с 0 или повече реда.
Четенето и писането в сокета от страна на клиента е асинхронно.
Командите се подават и изчисляват без значение на големината на буквите. Пример: команда quit и Quit е едно и също.
Посредством конзолата на клиента се изписват команди както следва:
Приключва се изпълнението на клиента с командата exit или quit , след което сървъра изчиства всички заделени ресурси за съответния клиент, а клиента връща код за грешка 0 и изписва server disconnect, както е описано в условито по-горе.
